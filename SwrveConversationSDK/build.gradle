apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    }

    // Needed to publish all variants
    publishNonDefault true

    buildTypes {
        debug {}
        release { }
    }

    lintOptions {
        abortOnError true
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'com.android.support:support-v4:' + project.ANDROID_DESIGN_TOOLS_VERSION
    compile 'com.android.support:appcompat-v7:' + project.ANDROID_DESIGN_TOOLS_VERSION
    compile project(':SwrveSDKCommon')
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

publishing {
    repositories {
        maven {
            url "$buildDir/../publish" // SwrveConversationSDK/publish
        }
    }

    publications {
        main(MavenPublication) {

            artifactId 'swrve-conversations'
            groupId 'com.swrve.sdk.android'
            version '4.3.0'
            artifacts = ["$buildDir/outputs/aar/${project.name}-release.aar"]

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    if (it.name == 'SwrveSDKCommon') {
                        dependencyNode.appendNode('groupId', 'com.swrve.sdk.android')
                        dependencyNode.appendNode('artifactId', 'swrve-common')
                        dependencyNode.appendNode('version', '4.3.0')
                        dependencyNode.appendNode('scope', 'compile')
                    } else {
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'compile')
                    }
                }
            }

        }
    }
}