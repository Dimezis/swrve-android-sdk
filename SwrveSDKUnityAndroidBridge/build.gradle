apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {}
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'

    compile 'com.android.support:support-v4:' + project.ANDROID_DESIGN_TOOLS_VERSION
    compile 'com.android.support:appcompat-v7:' + project.ANDROID_DESIGN_TOOLS_VERSION
    compile 'com.android.support:design:' + project.ANDROID_DESIGN_TOOLS_VERSION

    compile project(':UnityLibrary')
    compile project(path: ':SwrveSDK', configuration: 'googleDebug') // Use this library when compiling locally with google services
    compile project(':SwrveLocationSDK')
}

task copyAARToUnity(type: Copy) {
    from('build/outputs/aar')
    into('../../../unity_native_working/unity3d/Assets/Plugins/Android')
    include(project.name + '-debug.aar')
}

task copySwrveSDKToUnity(type: Copy) {
    from('../public/SwrveSDK/build/outputs/aar')
    into('../../../unity_native_working/unity3d/Assets/Plugins/Android')
    include('SwrveSDK-google-debug.aar')
}

task copySwrveLocationSDKToUnity(type: Copy) {
    from('../SwrveLocationSDK/build/outputs/aar')
    into('../../../unity_native_working/unity3d/Assets/Plugins/Android')
    include('SwrveLocationSDK-google-debug.aar')
}

assembleDebug.finalizedBy copySwrveSDKToUnity
assembleDebug.finalizedBy copySwrveLocationSDKToUnity
assembleDebug.finalizedBy copyAARToUnity
